apply plugin: 'com.android.application'
android {
    signingConfigs {
        config {
            keyAlias 'test'
            keyPassword '123456'
            storeFile file('/Users/weikailiang/Downloads/Android/free/test.jks')
            storePassword '123456'
        }
    }
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    defaultConfig {
        applicationId "com.base.blog"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionName rootProject.ext.android["versionName"]
        versionCode rootProject.ext.android["versionCode"]
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
        signingConfig signingConfigs.config
        multiDexEnabled true

        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters 'armeabi','x86'

        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.config
        }
    }
    dexOptions {
        dexInProcess true
        preDexLibraries true
        javaMaxHeapSize "4g"
    }
    dataBinding {
        enabled true
    }
    productFlavors {
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation rootProject.ext.dependencies["arouter-api"]
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]
    implementation rootProject.ext.dependencies["fragmentation"]
    implementation rootProject.ext.dependencies["pager-bottom-tab"]
    implementation rootProject.ext.dependencies["recyclerview"]
    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["statebar"]
    implementation rootProject.ext.dependencies["rxandroid"]
    implementation rootProject.ext.dependencies["rxjava"]
    implementation rootProject.ext.dependencies["glide"]
    implementation project(':library:tool:common')
    implementation project(':library:tool:refresh')
    if (isNeedMineModule.toBoolean()) {
        implementation project(':library:compone:mine')
    }
    if (isNeedHomeModule.toBoolean()) {
        implementation project(':library:compone:home')
    }
    if (isNeedChatModule.toBoolean()) {
        implementation project(':library:compone:chat')
    }
}
